{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?9b05","webpack:///./src/components/PipingChat.vue?3d1e","webpack:///./src/App.vue?a2b3","webpack:///./src/components/PipingChat.vue?423d","webpack:///./src/promise-sequential-context.ts","webpack:///./src/utils.ts","webpack:///./src/PipingChatter.ts","webpack:///./src/components/PipingChat.vue?5f96","webpack:///./src/components/PipingChat.vue?e810","webpack:///./src/components/PipingChat.vue","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?640d","webpack:///./src/App.vue","webpack:///./src/registerServiceWorker.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticStyle","_v","staticRenderFns","model","callback","$$v","isConnectable","expression","v","serverUrl","talkerId","peerId","enableSignature","publicPrivateSignPemRules","publicSignPem","showsPrivateSignPem","privateSignPem","_e","nKeyBits","on","$event","assignPrivatePem","isSignPemSaveable","savePrivateKey","isSignPemErasable","erasePrivateKey","peerPublicSignPem","isConnecting","connectToPeer","scopedSlots","_u","fn","proxy","sessionId","publicEncryptJwkString","showsPrivateEncryptJwk","privateEncryptJwkString","peerPublicEncryptJwkString","talk","sendTalk","_l","kind","_s","class","content","arrived","staticClass","time","prev","Promise","resolve","asyncFunc","then","catch","pubRsaPemToPubKey","alg","publicPem","pubJwk","crypto","subtle","importKey","privRsaPemToPubPrivKeys","privatePem","crypt","jsencrypt","setPrivateKey","getPublicKey","privJwk","publicKey","privateKey","arrayBufferToString","arr","String","fromCharCode","Uint8Array","stringToArrayBuffer","str","numbers","map","charCodeAt","buffer","getBodyBytesFromResponse","res","body","reader","getReader","arrays","totalLen","read","done","byteLength","allArray","pos","set","mergeUint8Array","a","b","merged","rsaOtherPrimesInfoFormat","jsonWebKeyFormat","crv","dp","dq","e","ext","k","key_ops","kty","oth","q","qi","use","x","y","keyExchangeParcelFormat","sessionIdPublicJwk","encryptPublicJwk","sessionIdSignatureParcelFormat","talkParcelFormat","parcelFormat","getPath","toId","fromId","toString","generateSessionId","sessionIdPrivateKey","namedCurve","sessionIdPublicKey","deriveKey","public","sessionIdKey","exportKey","sessionIdJwk","params","aesGcmIvLength","sessionIdKeyPairPromise","generateKey","recieveSeqCtx","sendSeqCtx","signAlg","hash","hasPublicKeySent","hasPeerPublicKeyReceived","peerVerified","hasBeenEmitEstablished","encryptKeyPairPromise","encryptKeyPair","onEncryptKeyPair","sendPublicKey","receiveParcelLoop","message","userTalk","Date","connectId","onTalk","myTalk","url","peerConnectId","undefined","peerEncryptPublicCryptoKey","echoSystemTalk","parcel","encryptParcel","run","fetch","method","pipeTo","WritableStream","iv","getRandomValues","getSecretKey","secretKey","encrypt","tagLength","TextEncoder","encode","JSON","stringify","encryptedParcel","console","log","headers","establishProcessIfNeed","isEstablished","onEstablished","text","error","decrypt","decryptedParcel","TextDecoder","decode","json","peerPublicJwk","onSessionId","onPeerEncryptPublicCryptoKey","sign","btoa","signature","signatureBuff","atob","peerPublicKey","verify","peerPublicCryptoKey","getRandomId","len","alphas","chars","randomArr","Uint32Array","Array","from","join","getJwkString","jwk","getPublicPemFromPrivate","err","StorageKeys","PRIVATE_SIGNATURE_PEM","talks","localStorage","getItem","pipingChatter","nextTick","unshift","startTime","timerId","setInterval","pastSec","getTime","modulusLength","publicExponent","rsaPrivateKey","clearInterval","rsaPrivateJwk","setItem","removeItem","components","TimeAgo","component","PipingChat","ready","registered","cached","updatefound","updated","offline","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.6b89d7a4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PipingChat.vue?vue&type=style&index=0&id=06427cf8&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PipingChat.vue?vue&type=style&index=0&id=06427cf8&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{attrs:{\"id\":\"app\"}},[_c('h1',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"Piping Chat\")]),_c('p',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\" 🛡 End-to-End Encryption Chat via \"),_c('a',{attrs:{\"href\":\"https://github.com/nwtgck/piping-server\"}},[_vm._v(\"Piping Server\")]),_vm._v(\" \"),_c('br'),_c('a',{attrs:{\"href\":\"https://github.com/nwtgck/piping-chat-web\"}},[_c('v-icon',[_vm._v(\"fab fa-github\")]),_vm._v(\" GitHub \")],1)]),_c('PipingChat')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-form',{model:{value:(_vm.isConnectable),callback:function ($$v) {_vm.isConnectable=$$v},expression:\"isConnectable\"}},[_c('v-layout',[_c('v-flex',{attrs:{\"xs12\":\"\",\"offset-sm2\":\"\",\"sm8\":\"\",\"offset-md3\":\"\",\"md6\":\"\"}},[_c('v-card',{staticStyle:{\"padding\":\"1em\"}},[_c('v-text-field',{attrs:{\"label\":\"Server URL\",\"rules\":[function (v) { return !!v || 'Server URL is required'; }],\"required\":\"\"},model:{value:(_vm.serverUrl),callback:function ($$v) {_vm.serverUrl=$$v},expression:\"serverUrl\"}}),_c('v-text-field',{attrs:{\"label\":\"Your ID\",\"rules\":[function (v) { return !!v || 'Your ID is required'; }],\"required\":\"\"},model:{value:(_vm.talkerId),callback:function ($$v) {_vm.talkerId=$$v},expression:\"talkerId\"}}),_c('v-text-field',{attrs:{\"label\":\"Peer ID\",\"placeholder\":\"e.g. bma\",\"rules\":[function (v) { return !!v || 'Peer ID is required'; }],\"required\":\"\"},model:{value:(_vm.peerId),callback:function ($$v) {_vm.peerId=$$v},expression:\"peerId\"}}),_c('v-switch',{attrs:{\"label\":\"Public key authentication\"},model:{value:(_vm.enableSignature),callback:function ($$v) {_vm.enableSignature=$$v},expression:\"enableSignature\"}}),(_vm.enableSignature)?_c('div',[_c('v-alert',{staticStyle:{\"margin-bottom\":\"1em\"},attrs:{\"value\":true,\"type\":\"info\",\"outline\":\"\"}},[_vm._v(\" NOTE: You can modify your public PEM by \"),_c('b',[_vm._v(\"private one\")]),_vm._v(\". \")]),_c('v-textarea',{attrs:{\"label\":\"Your public RSA PEM\",\"rules\":_vm.publicPrivateSignPemRules,\"readonly\":\"\",\"outline\":\"\",\"prepend-icon\":\"person\"},model:{value:(_vm.publicSignPem),callback:function ($$v) {_vm.publicSignPem=$$v},expression:\"publicSignPem\"}}),_c('v-switch',{attrs:{\"label\":\"Show/Edit your private PEM\",\"color\":\"secondary\"},model:{value:(_vm.showsPrivateSignPem),callback:function ($$v) {_vm.showsPrivateSignPem=$$v},expression:\"showsPrivateSignPem\"}}),(_vm.showsPrivateSignPem)?_c('v-textarea',{attrs:{\"label\":\"Your private RSA PEM\",\"rules\":_vm.publicPrivateSignPemRules,\"outline\":\"\",\"prepend-icon\":\"lock\"},model:{value:(_vm.privateSignPem),callback:function ($$v) {_vm.privateSignPem=$$v},expression:\"privateSignPem\"}}):_vm._e(),_c('v-text-field',{attrs:{\"label\":\"Key bits\",\"type\":\"number\"},model:{value:(_vm.nKeyBits),callback:function ($$v) {_vm.nKeyBits=$$v},expression:\"nKeyBits\"}}),_c('v-btn',{attrs:{\"color\":\"secondary\"},on:{\"click\":function($event){return _vm.assignPrivatePem()}}},[_c('v-icon',[_vm._v(\"autorenew\")]),_vm._v(\" Generate PEMs \")],1),_c('v-btn',{attrs:{\"color\":\"secondary\",\"disabled\":!_vm.isSignPemSaveable},on:{\"click\":function($event){return _vm.savePrivateKey()}}},[_c('v-icon',[_vm._v(\"save\")]),_vm._v(\" Save PEMs \")],1),_c('v-btn',{attrs:{\"color\":\"secondary\",\"disabled\":!_vm.isSignPemErasable},on:{\"click\":function($event){return _vm.erasePrivateKey()}}},[_c('v-icon',[_vm._v(\"delete\")]),_vm._v(\" Erase PEMs \")],1),_c('v-textarea',{staticStyle:{\"padding-top\":\"3em\"},attrs:{\"label\":\"Peer's public RSA PEM\",\"outline\":\"\",\"prepend-icon\":\"person\",\"rules\":[function (v) { return !!v || 'Peer\\'s public RSA is required'; }]},model:{value:(_vm.peerPublicSignPem),callback:function ($$v) {_vm.peerPublicSignPem=$$v},expression:\"peerPublicSignPem\"}})],1):_vm._e(),_c('v-btn',{attrs:{\"color\":\"primary\",\"disabled\":!_vm.isConnectable || _vm.isConnecting,\"block\":\"\"},on:{\"click\":function($event){return _vm.connectToPeer()}}},[_c('v-icon',[_vm._v(\"fas fa-plug\")]),_vm._v(\" Connect \")],1)],1),_c('v-expansion-panel',[_c('v-expansion-panel-content',{scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('v-icon',[_vm._v(\"person\")]),_c('div',[_vm._v(\"Connection details\")])]},proxy:true}])},[_c('v-card',{staticStyle:{\"padding\":\"1em\"}},[_c('v-text-field',{attrs:{\"label\":\"Session ID\",\"value\":_vm.sessionId,\"placeholder\":\" \",\"readonly\":\"\"}}),_c('v-textarea',{attrs:{\"label\":\"Your public JWK for encryption\",\"readonly\":\"\",\"prepend-icon\":\"public\",\"outline\":\"\"},model:{value:(_vm.publicEncryptJwkString),callback:function ($$v) {_vm.publicEncryptJwkString=$$v},expression:\"publicEncryptJwkString\"}}),_c('v-switch',{attrs:{\"label\":\"Show private JWK for encryption\",\"color\":\"secondary\"},model:{value:(_vm.showsPrivateEncryptJwk),callback:function ($$v) {_vm.showsPrivateEncryptJwk=$$v},expression:\"showsPrivateEncryptJwk\"}}),(_vm.showsPrivateEncryptJwk)?_c('v-textarea',{attrs:{\"label\":\"Your private JWK for encryption\",\"readonly\":\"\",\"prepend-icon\":\"vpn_key\",\"outline\":\"\"},model:{value:(_vm.privateEncryptJwkString),callback:function ($$v) {_vm.privateEncryptJwkString=$$v},expression:\"privateEncryptJwkString\"}}):_vm._e(),_c('h4'),_c('v-textarea',{attrs:{\"label\":\"Peer's public JWK for encryption\",\"readonly\":\"\",\"prepend-icon\":\"public\",\"placeholder\":\" \",\"outline\":\"\"},model:{value:(_vm.peerPublicEncryptJwkString),callback:function ($$v) {_vm.peerPublicEncryptJwkString=$$v},expression:\"peerPublicEncryptJwkString\"}})],1)],1)],1)],1)],1)],1),_c('div',{staticStyle:{\"margin\":\"1em\"}},[_c('v-layout',[_c('v-flex',{attrs:{\"offset-md1\":\"\",\"md10\":\"\",\"offset-lg2\":\"\",\"lg8\":\"\"}},[(_vm.isEstablished)?_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-layout',{attrs:{\"column\":\"\"}},[_c('v-flex',[_c('v-textarea',{attrs:{\"label\":\"Your talk\",\"outline\":\"\",\"hide-details\":\"\"},model:{value:(_vm.talk),callback:function ($$v) {_vm.talk=$$v},expression:\"talk\"}})],1),_c('v-flex',{attrs:{\"offset-xs9\":\"\",\"xs3\":\"\",\"offset-lg11\":\"\",\"lg1\":\"\"}},[_c('v-btn',{attrs:{\"disabled\":_vm.talk === '',\"color\":\"secondary\",\"block\":\"\"},on:{\"click\":function($event){return _vm.sendTalk()}}},[_c('v-icon',[_vm._v(\"send\")]),_vm._v(\" Send \")],1)],1)],1)],1):_vm._e(),_vm._l((_vm.talks),function(talk){return _c('div',[(talk.kind === 'user')?_c('span',[(talk.talkerId !== _vm.talkerId)?_c('span',[_vm._v(\" \"+_vm._s(talk.talkerId)+\" \")]):_vm._e(),_c('div',{class:{\n              \"me\": talk.talkerId === _vm.talkerId,\n              \"peer\": talk.talkerId !== _vm.talkerId,\n              \"talk\": true\n            }},[_c('pre',[_vm._v(_vm._s(talk.content))]),_c('span',{staticStyle:{\"color\":\"#444\"}},[(talk.talkerId === _vm.talkerId)?_c('span',[_vm._v(\" \"+_vm._s(talk.arrived ? \"✓\" : \"\")+\" \")]):_vm._e(),_c('time-ago',{staticClass:\"time\",attrs:{\"refresh\":60,\"datetime\":talk.time}})],1)])]):_vm._e(),(talk.kind === 'system')?_c('span',{staticStyle:{\"font-size\":\"1.5em\"}},[_c('b',[_vm._v(\"System\")]),_vm._v(\" \"),_c('time-ago',{staticClass:\"time\",attrs:{\"refresh\":60,\"datetime\":talk.time}}),_vm._v(\": \"+_vm._s(talk.content)+\" \")],1):_vm._e()])})],2)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n * Sequential context for promises which is like synchronize in Java\r\n *\r\n * In this context, previous promises run first\r\n */\r\nexport class PromiseSequentialContext {\r\n  public prev: Promise<any> = Promise.resolve();\r\n  public run<T>(asyncFunc: () => Promise<T>): Promise<T> {\r\n    this.prev = this.prev.then(() => {\r\n      return asyncFunc();\r\n    }).catch(() => {\r\n      return asyncFunc();\r\n    });\r\n    return this.prev;\r\n  }\r\n}\r\n","import { pem2jwk } from 'pem-jwk';\r\nimport * as jsencrypt from 'jsencrypt';\r\n\r\n\r\nexport async function pubRsaPemToPubKey(alg: RsaHashedImportParams, publicPem: string): Promise<CryptoKey> {\r\n  // Get public and private JWKs\r\n  const pubJwk: JsonWebKey  = pem2jwk(publicPem);\r\n  return window.crypto.subtle.importKey(\r\n    'jwk',\r\n    pubJwk,\r\n    alg,\r\n    true,\r\n    ['verify'],\r\n  );\r\n}\r\n\r\nexport async function privRsaPemToPubPrivKeys(\r\n  alg: RsaHashedImportParams,\r\n  privatePem: string,\r\n): Promise<{ publicKey: CryptoKey, privateKey: CryptoKey }> {\r\n  // Compute public key by the private key\r\n  const crypt = new jsencrypt.JSEncrypt();\r\n  crypt.setPrivateKey(privatePem);\r\n  const publicPem = crypt.getPublicKey();\r\n\r\n  // Get private JWK\r\n  const privJwk: JsonWebKey = pem2jwk(privatePem);\r\n\r\n  return {\r\n    publicKey: await pubRsaPemToPubKey(alg, publicPem),\r\n    privateKey: await window.crypto.subtle.importKey(\r\n      'jwk',\r\n      privJwk,\r\n      alg,\r\n      true,\r\n      ['sign'],\r\n    ),\r\n  };\r\n}\r\n\r\n\r\nexport function arrayBufferToString(arr: ArrayBuffer) {\r\n  return String.fromCharCode(... new Uint8Array(arr));\r\n}\r\n\r\n// (from: https://gist.github.com/kawanet/352a2ed1d1656816b2bc)\r\nexport function stringToArrayBuffer(str: string): ArrayBuffer {\r\n  const numbers: number[] = [].map.call(str, (c: string) => {\r\n    return c.charCodeAt(0);\r\n  }) as any; // TODO: Not use any\r\n  return new Uint8Array(numbers).buffer;\r\n}\r\n\r\nexport async function getBodyBytesFromResponse(res: Response): Promise<Uint8Array> {\r\n  if (res.body === null) {\r\n    return new Uint8Array();\r\n  }\r\n  const reader = res.body.getReader();\r\n  const arrays = [];\r\n  let totalLen = 0;\r\n  while (true) {\r\n    const {done, value} = await reader.read();\r\n    if (done) { break; }\r\n    totalLen += value.byteLength;\r\n    arrays.push(value);\r\n  }\r\n  // (from: https://qiita.com/hbjpn/items/dc4fbb925987d284f491)\r\n  const allArray = new Uint8Array(totalLen);\r\n  let pos = 0;\r\n  for (const arr of arrays) {\r\n    allArray.set(arr, pos);\r\n    pos += arr.byteLength;\r\n  }\r\n  return allArray;\r\n}\r\n\r\nexport function mergeUint8Array(a: Uint8Array, b: Uint8Array): Uint8Array {\r\n  const merged = new Uint8Array(a.byteLength + b.byteLength);\r\n  merged.set(a, 0);\r\n  merged.set(b, a.byteLength);\r\n  return merged;\r\n}\r\n\r\nexport const RSA = {\r\n  encrypt(publicKey: string, input: string): string {\r\n    const crypt  = new jsencrypt.JSEncrypt();\r\n    crypt.setPublicKey(publicKey);\r\n    return crypt.encrypt(input);\r\n  },\r\n  decrypt(privateKey: string, encryptedText: string): string {\r\n    const crypt  = new jsencrypt.JSEncrypt();\r\n    crypt.setPublicKey(privateKey);\r\n    return crypt.decrypt(encryptedText);\r\n  },\r\n  generateKeys(options: jsencrypt.Options): Promise<{publicKey: string, privateKey: string}> {\r\n    const crypt  = new jsencrypt.JSEncrypt(options);\r\n    return new Promise((resolve) => {\r\n      crypt.getKey(() => {\r\n        resolve({\r\n          publicKey: crypt.getPublicKey(),\r\n          privateKey: crypt.getPrivateKey(),\r\n        });\r\n      });\r\n    });\r\n  },\r\n};\r\n","/* tslint:disable:no-console */\r\n\r\nimport * as cryptojs from 'crypto-js';\r\nimport {nul, bool, num, str, literal, opt, arr, tuple, obj, union, TsType, validatingParse} from 'ts-json-validator';\r\nimport {PromiseSequentialContext} from '@/promise-sequential-context';\r\nimport * as utils from '@/utils';\r\nimport {UserTalk, Talk} from '@/Talk';\r\nimport {jwkThumbprintByEncoding} from 'jwk-thumbprint';\r\n\r\nconst rsaOtherPrimesInfoFormat = obj({\r\n  d: opt(str),\r\n  r: opt(str),\r\n  t: opt(str),\r\n});\r\n\r\nconst jsonWebKeyFormat = obj({\r\n  alg: opt(str),\r\n  crv: opt(str),\r\n  d: opt(str),\r\n  dp: opt(str),\r\n  dq: opt(str),\r\n  e: opt(str),\r\n  ext: opt(bool),\r\n  k: opt(str),\r\n  key_ops: opt(arr(str)),\r\n  kty: opt(str),\r\n  n: opt(str),\r\n  oth: opt(arr(rsaOtherPrimesInfoFormat)),\r\n  p: opt(str),\r\n  q: opt(str),\r\n  qi: opt(str),\r\n  use: opt(str),\r\n  x: opt(str),\r\n  y: opt(str),\r\n});\r\n\r\nconst keyExchangeParcelFormat = obj({\r\n  kind: literal('key_exchange' as const),\r\n  content: obj({\r\n    // Public key for session ID generation\r\n    sessionIdPublicJwk: jsonWebKeyFormat,\r\n    // Public key for encryption\r\n    encryptPublicJwk: jsonWebKeyFormat,\r\n  }),\r\n});\r\ntype KeyExchangeParcel = TsType<typeof keyExchangeParcelFormat>;\r\n\r\n\r\nconst sessionIdSignatureParcelFormat = obj({\r\n  kind: literal('session_id_signature' as const),\r\n  content: str,\r\n});\r\ntype SessionIdSignatureParcel = TsType<typeof sessionIdSignatureParcelFormat>;\r\n\r\n\r\nconst talkParcelFormat = obj({\r\n  kind: literal('talk' as const),\r\n  content: str,\r\n});\r\ntype TalkParcel = TsType<typeof talkParcelFormat>;\r\n\r\n\r\nconst parcelFormat = union(keyExchangeParcelFormat, sessionIdSignatureParcelFormat, talkParcelFormat);\r\ntype Parcel = TsType<typeof parcelFormat>;\r\n\r\n\r\n\r\nfunction getPath(toId: string, fromId: string): string {\r\n  return cryptojs.SHA256(`${toId}-to-${fromId}`).toString();\r\n}\r\n\r\n// Generate session ID\r\nasync function generateSessionId(sessionIdPublicJwk: JsonWebKey, sessionIdPrivateKey: CryptoKey): Promise<string> {\r\n  // Convert JWK To CryptoKey\r\n  const sessionIdPublicKey: CryptoKey = await crypto.subtle.importKey(\r\n    'jwk',\r\n    sessionIdPublicJwk,\r\n    {name: 'ECDH', namedCurve: 'P-256'},\r\n    true,\r\n    [],\r\n  );\r\n  // Create secret key for session ID generation\r\n  const sessionIdKey: CryptoKey = await crypto.subtle.deriveKey(\r\n    { name: 'ECDH', public: sessionIdPublicKey },\r\n    sessionIdPrivateKey,\r\n    {name: 'AES-GCM', length: 128},\r\n    true,\r\n    ['encrypt', 'decrypt'],\r\n  );\r\n  // Convert the secret key to JWK\r\n  // NOTE: 'kty' should be 'oct'  logically\r\n  const sessionIdJwk: JsonWebKey & {kty: 'oct'} = await window.crypto.subtle.exportKey(\r\n    'jwk',\r\n    sessionIdKey,\r\n  ) as (JsonWebKey & {kty: 'oct'});\r\n  // Get JWK thumbprint by hex\r\n  return jwkThumbprintByEncoding(sessionIdJwk, 'SHA-256', 'hex');\r\n}\r\n\r\n\r\ninterface Parameters {\r\n  serverUrl: string;\r\n  connectId: string;\r\n  peerConnectId: string;\r\n  enableSignature: boolean;\r\n  privateSignPem: string;\r\n  peerPublicSignPem: string;\r\n\r\n  // TODO: Use type-safe EventEmitter instead of onXxx\r\n  onSessionId: (sessionId: string) => void;\r\n  onEncryptKeyPair: (encryptKeyPair: CryptoKeyPair) => void;\r\n  onPeerEncryptPublicCryptoKey: (peerEncryptPublicCryptoKey: CryptoKey) => void;\r\n  onEstablished: () => void;\r\n  onTalk: (talk: Talk) => void;\r\n}\r\n\r\nexport class PipingChatter {\r\n  // Initialization vector size\r\n  private readonly aesGcmIvLength: number = 12;\r\n\r\n  // Key pair to create session ID\r\n  private sessionIdKeyPairPromise: PromiseLike<CryptoKeyPair> = window.crypto.subtle.generateKey(\r\n    { name: 'ECDH', namedCurve: 'P-256'},\r\n    true,\r\n    ['deriveKey', 'deriveBits'],\r\n  );\r\n  // Session ID\r\n  private sessionId: string = '';\r\n\r\n  // Key pair for encryption\r\n  private encryptKeyPairPromise: PromiseLike<CryptoKeyPair>;\r\n\r\n  // Peer's public key for encryption\r\n  private peerEncryptPublicCryptoKey?: CryptoKey;\r\n\r\n  // Context to receive talks sequentially\r\n  private recieveSeqCtx = new PromiseSequentialContext();\r\n  // Context to send talks sequentially\r\n  private sendSeqCtx    = new PromiseSequentialContext();\r\n\r\n  // Algorithm for signature\r\n  private signAlg = { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-256' } };\r\n\r\n  // Whether your public key sent or not\r\n  private hasPublicKeySent: boolean = false;\r\n  // Whether peer's public key received or not\r\n  private hasPeerPublicKeyReceived: boolean = false;\r\n  // Whether peer is verified by public key authentication\r\n  private peerVerified: boolean = false;\r\n\r\n  // Whether emitting \"establish\"\r\n  private hasBeenEmitEstablished: boolean = false;\r\n\r\n\r\n  constructor(readonly params: Parameters) {\r\n    this.encryptKeyPairPromise = window.crypto.subtle.generateKey(\r\n      { name: 'ECDH', namedCurve: 'P-256'},\r\n      true,\r\n      ['deriveKey', 'deriveBits'],\r\n    );\r\n    this.encryptKeyPairPromise.then((encryptKeyPair) => {\r\n      this.params.onEncryptKeyPair(encryptKeyPair);\r\n    });\r\n  }\r\n\r\n  public connectToPeer(): void {\r\n    // Send my public key\r\n    this.sendPublicKey();\r\n\r\n    // Get-loop of peer's message\r\n    this.receiveParcelLoop();\r\n  }\r\n\r\n  public sendTalk(message: string): void {\r\n    const userTalk: UserTalk = {\r\n      kind: 'user',\r\n      time: new Date(),\r\n      talkerId: this.params.connectId,\r\n      content: message,\r\n      arrived: false,\r\n    };\r\n    // Push my talk\r\n    this.params.onTalk(userTalk);\r\n    const myTalk: string = message;\r\n\r\n    (async () => {\r\n      const url = `${this.params.serverUrl}/${getPath(this.params.connectId, this.params.peerConnectId)}`;\r\n      if (this.peerEncryptPublicCryptoKey === undefined) {\r\n        this.echoSystemTalk('Peer\\'s public key is not received yet.');\r\n      } else {\r\n        const parcel: Parcel = {\r\n          kind: 'talk',\r\n          content: myTalk,\r\n        };\r\n        // Encrypt parcel\r\n        const body = await this.encryptParcel(parcel, this.peerEncryptPublicCryptoKey);\r\n        await this.sendSeqCtx.run(async () => {\r\n          const res = await fetch(url, {\r\n            method: 'POST',\r\n            body,\r\n          });\r\n          if (res.body === null) {\r\n            this.echoSystemTalk('Unexpected error: send-body is null.');\r\n          } else {\r\n            // Wait for body being complete\r\n            await res.body.pipeTo(new WritableStream({}));\r\n            // Set arrived as true\r\n            // NOTE: destructive operation: mutation\r\n            userTalk.arrived = true;\r\n          }\r\n        });\r\n      }\r\n    })();\r\n  }\r\n\r\n  /**\r\n   * Encrypt parcel attached IV on head\r\n   * @param parcel\r\n   * @param peerEncryptPublicCryptoKey\r\n   */\r\n  private async encryptParcel(parcel: Parcel, peerEncryptPublicCryptoKey: CryptoKey): Promise<Uint8Array> {\r\n    // Create an initialization vector\r\n    const iv = crypto.getRandomValues(new Uint8Array(this.aesGcmIvLength));\r\n    // Get secret key\r\n    const secretKey = await this.getSecretKey(peerEncryptPublicCryptoKey);\r\n    // Encrypt parcel\r\n    const encryptedParcel = await crypto.subtle.encrypt(\r\n      { name: 'AES-GCM', iv, tagLength: 128 },\r\n      secretKey,\r\n      // (from: https://stackoverflow.com/a/41180394/2885946)\r\n      new TextEncoder().encode(JSON.stringify(parcel)),\r\n    );\r\n    // Join IV and encrypted parcel\r\n    return utils.mergeUint8Array(iv, new Uint8Array(encryptedParcel));\r\n  }\r\n\r\n  private echoSystemTalk(message: string): void {\r\n    this.params.onTalk({\r\n      kind: 'system',\r\n      time: new Date(),\r\n      content: message,\r\n    });\r\n  }\r\n\r\n  private async sendPublicKey() {\r\n    this.echoSystemTalk(`Sending your public key to \"${this.params.peerConnectId}\"...`);\r\n\r\n    // Get public JWK for session ID generation\r\n    const sessionIdPublicJwk: JsonWebKey = await crypto.subtle.exportKey(\r\n      'jwk',\r\n      (await this.sessionIdKeyPairPromise).publicKey,\r\n    );\r\n\r\n    // Get public JWK for encryption\r\n    const encryptPublicJwk: JsonWebKey = await crypto.subtle.exportKey(\r\n      'jwk',\r\n      (await this.encryptKeyPairPromise).publicKey,\r\n    );\r\n\r\n    const url = `${this.params.serverUrl}/${getPath(this.params.connectId, this.params.peerConnectId)}`;\r\n\r\n    const parcel: KeyExchangeParcel = {\r\n      kind: 'key_exchange',\r\n      content: {\r\n        sessionIdPublicJwk,\r\n        encryptPublicJwk,\r\n      },\r\n    };\r\n    console.log('parcel:', JSON.stringify(parcel));\r\n    const res = await this.sendSeqCtx.run(() =>\r\n      fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          // TODO: This should be \"application/json\".\r\n          //       however, POST application/json triggers preflight request\r\n          //       and Piping Server doesn't support preflight request.\r\n          'content-type': 'text/plain',\r\n        },\r\n        body: JSON.stringify(parcel),\r\n      }),\r\n    );\r\n\r\n    this.echoSystemTalk('Your public key sent.');\r\n    this.hasPublicKeySent = true;\r\n    this.establishProcessIfNeed();\r\n    console.log('res:', res);\r\n  }\r\n\r\n  private get isEstablished(): boolean {\r\n    return (\r\n      this.hasPublicKeySent &&\r\n      this.hasPeerPublicKeyReceived &&\r\n      (!this.params.enableSignature || this.peerVerified)\r\n    );\r\n  }\r\n\r\n  // Print established message if established\r\n  private establishProcessIfNeed(): void {\r\n    if (!this.hasBeenEmitEstablished && this.isEstablished) {\r\n      this.hasBeenEmitEstablished = true;\r\n      this.echoSystemTalk(`Connection established with \"${this.params.peerConnectId}\"!`);\r\n      this.params.onEstablished();\r\n    }\r\n  }\r\n\r\n  private async receiveParcelLoop() {\r\n    const url = `${this.params.serverUrl}/${getPath(this.params.peerConnectId, this.params.connectId)}`;\r\n    while (true) {\r\n      try {\r\n        console.log(`Getting ${url}...`);\r\n        const res = await this.recieveSeqCtx.run(() =>\r\n          fetch(url, {\r\n            method: 'GET',\r\n          }),\r\n        );\r\n\r\n        if (res.body === null) {\r\n          console.log('ERROR: Body not found');\r\n          return;\r\n        }\r\n\r\n        // Get parcel\r\n        const parcel: Parcel | undefined = await (async () => {\r\n          // If content type is JSON\r\n          // TODO: This should be \"application/json\".\r\n          //       however, POST application/json triggers preflight request\r\n          //       and Piping Server doesn't support preflight request.\r\n          if (res.headers.get('content-type') === 'text/plain') {\r\n            return validatingParse(\r\n              parcelFormat,\r\n              await res.text(),\r\n            );\r\n          } else {\r\n            if ( this.peerEncryptPublicCryptoKey === undefined ) {\r\n              console.error('Error: this.peerPublicCryptoKey is undefined');\r\n              return undefined;\r\n            }\r\n            // Get body\r\n            const body: Uint8Array = await utils.getBodyBytesFromResponse(res);\r\n            // Split body into IV and encrypted parcel\r\n            const iv = body.slice(0, this.aesGcmIvLength);\r\n            const encryptedParcel = body.slice(this.aesGcmIvLength);\r\n            console.log('body:', body);\r\n            // Get secret key\r\n            const secretKey = await this.getSecretKey(this.peerEncryptPublicCryptoKey);\r\n            // Decrypt body text\r\n            const decryptedParcel: ArrayBuffer = await crypto.subtle.decrypt(\r\n              { name: 'AES-GCM', iv, tagLength: 128 },\r\n              secretKey,\r\n              encryptedParcel,\r\n            );\r\n            // Parse and validate\r\n            return validatingParse(\r\n              parcelFormat,\r\n              // (from: https://stackoverflow.com/a/41180394/2885946)\r\n              new TextDecoder().decode(decryptedParcel),\r\n            );\r\n          }\r\n        })();\r\n\r\n        if (parcel === undefined) {\r\n          console.error(`Parse error: ${await res.json()}`);\r\n          return;\r\n        }\r\n\r\n        switch (parcel.kind) {\r\n          case 'key_exchange':\r\n            // Set peer's public JWK\r\n            const peerPublicJwk: JsonWebKey = parcel.content.encryptPublicJwk;\r\n            console.log('Peer\\'s public JWK:', peerPublicJwk);\r\n\r\n            // Assign session ID\r\n            this.sessionId = await generateSessionId(\r\n              parcel.content.sessionIdPublicJwk,\r\n              (await this.sessionIdKeyPairPromise).privateKey,\r\n            );\r\n            this.params.onSessionId(this.sessionId);\r\n            console.log('Session ID:', this.sessionId);\r\n\r\n            // Assign peer's public JWK by import\r\n            this.peerEncryptPublicCryptoKey = await crypto.subtle.importKey(\r\n              'jwk',\r\n              peerPublicJwk,\r\n              {name: 'ECDH', namedCurve: 'P-256'},\r\n              true,\r\n              [],\r\n            );\r\n            this.params.onPeerEncryptPublicCryptoKey(this.peerEncryptPublicCryptoKey);\r\n\r\n            this.echoSystemTalk('Peer\\'s public key received.');\r\n            this.hasPeerPublicKeyReceived = true;\r\n\r\n            // If signature is enabled\r\n            if (this.params.enableSignature) {\r\n              // Get private key by PEM\r\n              const { privateKey } = await utils.privRsaPemToPubPrivKeys(this.signAlg, this.params.privateSignPem);\r\n              // Sign session ID\r\n              // NOTE: Peer has the same session ID\r\n              // tslint:disable-next-line:no-shadowed-variable\r\n              const signatureBuff: ArrayBuffer = await window.crypto.subtle.sign(\r\n                this.signAlg,\r\n                privateKey,\r\n                utils.stringToArrayBuffer(this.sessionId),\r\n              );\r\n              // Get signature by using base64 encode\r\n              // tslint:disable-next-line:no-shadowed-variable\r\n              const signature = btoa(utils.arrayBufferToString(signatureBuff));\r\n              console.log('send signature:', signature);\r\n\r\n              // tslint:disable-next-line:no-shadowed-variable\r\n              const parcel: SessionIdSignatureParcel = {\r\n                kind: 'session_id_signature',\r\n                content: signature,\r\n              };\r\n              // Encrypt parcel\r\n              const body = await this.encryptParcel(parcel, this.peerEncryptPublicCryptoKey);\r\n              // NOTE: Should not use await not to prevent receive loop\r\n              this.sendSeqCtx.run(async () => {\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                const url = `${this.params.serverUrl}/${getPath(this.params.connectId, this.params.peerConnectId)}`;\r\n                // Send signature\r\n                // tslint:disable-next-line:no-shadowed-variable\r\n                const res = await fetch(url, {\r\n                  method: 'POST',\r\n                  body,\r\n                });\r\n                if (res.body === null) {\r\n                  this.echoSystemTalk('Unexpected error: send-body is null.');\r\n                } else {\r\n                  // Wait for body being complete\r\n                  await res.body.pipeTo(new WritableStream({}));\r\n                }\r\n              });\r\n            }\r\n\r\n            this.establishProcessIfNeed();\r\n            break;\r\n          case 'session_id_signature':\r\n            if (this.sessionId === '') {\r\n              console.error('Unexpected Error: session is empty');\r\n              break;\r\n            }\r\n            // Get based64 encoded signature\r\n            // tslint:disable-next-line:no-shadowed-variable\r\n            const signature: string = parcel.content;\r\n            console.log('receive signature:', signature);\r\n            // Decode base64\r\n            // tslint:disable-next-line:no-shadowed-variable\r\n            const signatureBuff: ArrayBuffer = utils.stringToArrayBuffer(atob(signature));\r\n            // Get peer's public key\r\n            const peerPublicKey = await utils.pubRsaPemToPubKey(this.signAlg, this.params.peerPublicSignPem);\r\n            // Verify\r\n            this.peerVerified = await window.crypto.subtle.verify(\r\n              this.signAlg,\r\n              peerPublicKey,\r\n              signatureBuff,\r\n              utils.stringToArrayBuffer(this.sessionId),\r\n            );\r\n            console.log('verified:', this.peerVerified);\r\n\r\n            if (this.peerVerified) {\r\n              this.echoSystemTalk('Peer was verified!');\r\n            } else {\r\n              this.echoSystemTalk('Error: Peer was not verified.');\r\n              this.echoSystemTalk('Error: Connection was not established.');\r\n              break;\r\n            }\r\n            this.establishProcessIfNeed();\r\n            break;\r\n          case 'talk':\r\n            const userTalk: UserTalk = {\r\n              kind: 'user',\r\n              time: new Date(),\r\n              talkerId: this.params.peerConnectId,\r\n              content: parcel.content,\r\n              arrived: true,\r\n            };\r\n\r\n            console.log('userTalk:', userTalk);\r\n            this.params.onTalk(userTalk);\r\n            break;\r\n        }\r\n      } catch (err) {\r\n        console.error('Error:', err);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getSecretKey(peerPublicCryptoKey: CryptoKey): Promise<CryptoKey> {\r\n    return crypto.subtle.deriveKey(\r\n      { name: 'ECDH', public: peerPublicCryptoKey },\r\n      (await this.encryptKeyPairPromise).privateKey,\r\n      {name: 'AES-GCM', length: 128},\r\n      false,\r\n      ['encrypt', 'decrypt'],\r\n    );\r\n  }\r\n}\r\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n/* tslint:disable:no-console */\r\nimport {Component, Vue} from 'vue-property-decorator';\r\nimport TimeAgo from 'vue2-timeago';\r\nimport * as jsencrypt from 'jsencrypt';\r\nimport { jwk2pem } from 'pem-jwk';\r\nimport {PipingChatter} from '@/PipingChatter';\r\nimport {Talk} from '@/Talk';\r\n\r\n\r\n/**\r\n * Get random ID\r\n * @param len\r\n */\r\nfunction getRandomId(len: number): string {\r\n  // NOTE: some similar shaped alphabets are not used\r\n  const alphas  = [\r\n    'a', 'b', 'c', 'd', 'e', 'f', 'h', 'i', 'j', 'k', 'm', 'n', 'p', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\r\n  ];\r\n  const chars   = [...alphas];\r\n\r\n  const randomArr = window.crypto.getRandomValues(new Uint32Array(len));\r\n  return Array.from(randomArr).map((n) => chars[n % chars.length]).join('');\r\n}\r\n\r\n/**\r\n * Get JSON string from Crypto key\r\n * @param key\r\n */\r\nasync function getJwkString(key: CryptoKey): Promise<string> {\r\n  const jwk = await window.crypto.subtle.exportKey('jwk', key);\r\n  return JSON.stringify(jwk, null, '  ');\r\n}\r\n\r\n/**\r\n * Get public PEM from private PEM\r\n * @param privatePem\r\n */\r\nfunction getPublicPemFromPrivate(privatePem: string): string | undefined {\r\n  if (privatePem === '') {\r\n    return undefined;\r\n  } else {\r\n    try {\r\n      // Compute public key by the private key\r\n      const crypt = new jsencrypt.JSEncrypt();\r\n      crypt.setPrivateKey(privatePem);\r\n      return crypt.getPublicKey();\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n\r\nconst StorageKeys = {\r\n  PRIVATE_SIGNATURE_PEM: 'LOCAL_STORAGE_KEY/PRIVATE_SIGNATURE_PEM',\r\n};\r\n\r\n@Component({\r\n  components: {\r\n    TimeAgo,\r\n  },\r\n})\r\nexport default class PipingChat extends Vue {\r\n\r\n  // My public key\r\n  private get publicSignPem(): string {\r\n    if (this.privateSignPem === '') {\r\n      return '';\r\n    } else {\r\n      const publicSignPem: string | undefined = getPublicPemFromPrivate(this.privateSignPem);\r\n      if (publicSignPem === undefined) {\r\n        return 'INVALID PRIVATE KEY';\r\n      } else {\r\n        return publicSignPem;\r\n      }\r\n    }\r\n  }\r\n\r\n  private isEstablished: boolean = false;\r\n  private isConnecting: boolean = false;\r\n\r\n  // Whether connect form is valid or not\r\n  private isConnectable: boolean = false;\r\n\r\n  // TODO: Hard code\r\n  private serverUrl: string = 'https://ppng.io';\r\n  private peerId: string = '';\r\n\r\n  private talkerId = getRandomId(3);\r\n  private talks: Talk[] = [];\r\n\r\n  private talk: string = '';\r\n\r\n  private nKeyBits = 4096;\r\n\r\n  private pipingChatter?: PipingChatter;\r\n\r\n  // Session ID\r\n  private sessionId: string = '';\r\n\r\n  // Whether using signature to verify peer\r\n  private enableSignature = false;\r\n  // Private PEM only for signature\r\n  private privateSignPem = '';\r\n  // Peer's public PEM for signature\r\n  private peerPublicSignPem = '';\r\n  // Whether showing private PEM for signature or not\r\n  private showsPrivateSignPem: boolean = false;\r\n  // Whether showing private JWK for encryption or not\r\n  private showsPrivateEncryptJwk: boolean = false;\r\n\r\n  // Algorithm for signature\r\n  private signAlg = { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-256' } };\r\n\r\n  // Whether sign PEM can be saved\r\n  private get isSignPemSaveable(): boolean {\r\n    return getPublicPemFromPrivate(this.privateSignPem) !== undefined;\r\n  }\r\n\r\n  // Whether sign PEM can be erased\r\n  private isSignPemErasable: boolean = false;\r\n\r\n  // NOTE: Should use getter if you use it as property, this.enableSignature is always false\r\n  private get publicPrivateSignPemRules(): ReadonlyArray<(v: string) => string | true> {\r\n    return [\r\n      (v) => {\r\n        if (this.enableSignature) {\r\n          if (getPublicPemFromPrivate(this.privateSignPem) === undefined) {\r\n            return 'Your private RSA PEM is not valid';\r\n          } else {\r\n            return true;\r\n          }\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  // Public JWK string for encryption\r\n  private publicEncryptJwkString: string = '';\r\n\r\n  // Private JWK string for encryption\r\n  private privateEncryptJwkString: string = '';\r\n\r\n  // Peer's public JWK string for encryption\r\n  private peerPublicEncryptJwkString: string = '';\r\n\r\n  public mounted() {\r\n    const privatePem: string | null = localStorage.getItem(StorageKeys.PRIVATE_SIGNATURE_PEM);\r\n    // If private key is found\r\n    if (privatePem !== null) {\r\n      this.privateSignPem = privatePem;\r\n      // Sign PEM is erasable\r\n      this.isSignPemErasable = true;\r\n      this.echoSystemTalk('🔑 Your private PEM loaded!');\r\n    }\r\n  }\r\n\r\n  private connectToPeer(): void {\r\n    // Generate chatting system\r\n    this.pipingChatter = new PipingChatter({\r\n      serverUrl: this.serverUrl,\r\n      connectId: this.talkerId,\r\n      peerConnectId: this.peerId,\r\n      enableSignature: this.enableSignature,\r\n      privateSignPem: this.privateSignPem,\r\n      peerPublicSignPem: this.peerPublicSignPem,\r\n\r\n      onSessionId: (sessionId: string) => {\r\n        // NOTE: I'm not sure this usage is correct to update asynchronously,\r\n        //       but without this, it sometimes weren't updated.\r\n        Vue.nextTick(() => {\r\n          this.sessionId = sessionId;\r\n        });\r\n      },\r\n      onEstablished: () => {\r\n        // NOTE: I'm not sure this usage is correct to update asynchronously,\r\n        //       but without this, it sometimes weren't updated.\r\n        Vue.nextTick(() => {\r\n          this.isEstablished = true;\r\n        });\r\n      },\r\n      onEncryptKeyPair: (encryptKeyPair: CryptoKeyPair) => {\r\n        // NOTE: I'm not sure this usage is correct to update asynchronously,\r\n        //       but without this, it sometimes weren't updated.\r\n        Vue.nextTick(async () => {\r\n          this.publicEncryptJwkString  = await getJwkString(encryptKeyPair.publicKey);\r\n          this.privateEncryptJwkString = await getJwkString(encryptKeyPair.privateKey);\r\n        });\r\n      },\r\n      onPeerEncryptPublicCryptoKey: (peerEncryptPublicCryptoKey: CryptoKey) => {\r\n        // NOTE: I'm not sure this usage is correct to update asynchronously,\r\n        //       but without this, it sometimes weren't updated.\r\n        Vue.nextTick(async () => {\r\n          this.peerPublicEncryptJwkString = await getJwkString(peerEncryptPublicCryptoKey);\r\n        });\r\n      },\r\n      onTalk: (talk: Talk) => {\r\n        // NOTE: I'm not sure this usage is correct to update asynchronously,\r\n        //       but without this, it sometimes weren't updated.\r\n        Vue.nextTick(() => {\r\n          this.talks.unshift(talk);\r\n        });\r\n      },\r\n    });\r\n\r\n    // Connect to the peer\r\n    this.pipingChatter.connectToPeer();\r\n    this.isConnecting = true;\r\n  }\r\n\r\n  private sendTalk(): void {\r\n    if (this.pipingChatter === undefined) {\r\n      console.error('Unexpected error: piping chatter is not defined');\r\n    } else {\r\n      // Send a talk\r\n      this.pipingChatter.sendTalk(this.talk);\r\n      this.talk = '';\r\n    }\r\n  }\r\n\r\n  private echoSystemTalk(message: string): void {\r\n    this.talks.unshift({\r\n      kind: 'system',\r\n      time: new Date(),\r\n      content: message,\r\n    });\r\n  }\r\n\r\n  // Assign a private key asynchronously\r\n  private async assignPrivatePem(): Promise<void> {\r\n    // Echo generating message\r\n    this.echoSystemTalk(`${this.nKeyBits}-bit key generating...`);\r\n\r\n    // Record start\r\n    const startTime = new Date();\r\n    // Generating message loop\r\n    const timerId = setInterval(() => {\r\n      const pastSec: number = (new Date().getTime() - startTime.getTime()) / 1000;\r\n      this.echoSystemTalk(`${this.nKeyBits}-bit key generating... (${pastSec} sec passed)`);\r\n    }, 4000);\r\n\r\n    // Generate RSA private PEM\r\n    const rsaPrivateKey: CryptoKeyPair = await window.crypto.subtle.generateKey(\r\n      { ...this.signAlg, modulusLength: this.nKeyBits,  publicExponent: new Uint8Array([0x01, 0x00, 0x01]) },\r\n      true,\r\n      ['sign', 'verify'],\r\n    );\r\n    // Clear the timer\r\n    clearInterval(timerId);\r\n\r\n    // Export to JWK\r\n    const rsaPrivateJwk: JsonWebKey = await window.crypto.subtle.exportKey('jwk', rsaPrivateKey.privateKey);\r\n    if (rsaPrivateJwk.kty !== undefined && rsaPrivateJwk.n !== undefined && rsaPrivateJwk.e !== undefined) {\r\n      const jwk = {\r\n        ...rsaPrivateJwk,\r\n        kty: rsaPrivateJwk.kty,\r\n        n: rsaPrivateJwk.n,\r\n        e: rsaPrivateJwk.e,\r\n      };\r\n      // Assign private pem\r\n      this.privateSignPem = jwk2pem(jwk);\r\n      // Echo generated message\r\n      this.echoSystemTalk(`🔑 ${this.nKeyBits}-bit PEM generated!`);\r\n    } else {\r\n      // Echo generated message\r\n      this.echoSystemTalk(`Error: ${this.nKeyBits}-bit PEM not generated`);\r\n    }\r\n  }\r\n\r\n  private savePrivateKey(): void {\r\n    // If private is not invalid\r\n    if (this.privateSignPem !== '') {\r\n      // Save private key in local storage\r\n      localStorage.setItem(StorageKeys.PRIVATE_SIGNATURE_PEM, this.privateSignPem);\r\n      // Sign PEM is erasable\r\n      this.isSignPemErasable = true;\r\n      this.echoSystemTalk('Your private PEM saved.');\r\n    }\r\n  }\r\n\r\n  private erasePrivateKey(): void {\r\n    // If private key in storage not found\r\n    if (localStorage.getItem(StorageKeys.PRIVATE_SIGNATURE_PEM) === null) {\r\n      this.echoSystemTalk('Private PEM is not saved yet.');\r\n    } else {\r\n      localStorage.removeItem(StorageKeys.PRIVATE_SIGNATURE_PEM);\r\n      // Sign PEM is not erasable\r\n      this.isSignPemErasable = false;\r\n      this.echoSystemTalk('Your private PEM erased from local storage.');\r\n    }\r\n  }\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PipingChat.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PipingChat.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./PipingChat.vue?vue&type=template&id=06427cf8&scoped=true&xmlns%3Av-slot=http%3A%2F%2Fwww.w3.org%2F1999%2FXSL%2FTransform&\"\nimport script from \"./PipingChat.vue?vue&type=script&lang=ts&\"\nexport * from \"./PipingChat.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./PipingChat.vue?vue&type=style&index=0&id=06427cf8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"06427cf8\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator';\r\nimport PipingChat from './components/PipingChat.vue';\r\n\r\n\r\n@Component({\r\n  components: {\r\n    PipingChat,\r\n  },\r\n})\r\nexport default class App extends Vue {}\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=79a5f1c4&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* tslint:disable:no-console */\r\n\r\nimport { register } from 'register-service-worker';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  register(`${process.env.BASE_URL}service-worker.js`, {\r\n    ready() {\r\n      console.log(\r\n        'App is being served from cache by a service worker.\\n' +\r\n        'For more details, visit https://goo.gl/AFskqB',\r\n      );\r\n    },\r\n    registered() {\r\n      console.log('Service worker has been registered.');\r\n    },\r\n    cached() {\r\n      console.log('Content has been cached for offline use.');\r\n    },\r\n    updatefound() {\r\n      console.log('New content is downloading.');\r\n    },\r\n    updated() {\r\n      console.log('New content is available; please refresh.');\r\n    },\r\n    offline() {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    },\r\n    error(error) {\r\n      console.error('Error during service worker registration:', error);\r\n    },\r\n  });\r\n}\r\n","// (from: https://vuetifyjs.com/en/framework/icons#icons)\r\nimport 'material-design-icons-iconfont/dist/material-design-icons.css';\r\n\r\n// (from: https://e-joint.jp/474/)\r\nimport '@fortawesome/fontawesome';\r\nimport '@fortawesome/fontawesome-free-solid';\r\n// import '@fortawesome/fontawesome-free-regular';\r\nimport '@fortawesome/fontawesome-free-brands';\r\n\r\nimport Vue from 'vue';\r\nimport App from './App.vue';\r\nimport './registerServiceWorker';\r\nimport Vuetify from 'vuetify';\r\nimport 'vuetify/dist/vuetify.min.css';\r\n\r\nVue.config.productionTip = false;\r\n\r\nVue.use(Vuetify);\r\n\r\nnew Vue({\r\n  render: (h) => h(App),\r\n}).$mount('#app');\r\n"],"sourceRoot":""}